/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jdbcasgmt;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author s one
 */
public class Library extends javax.swing.JFrame {

    /**
     * Creates new form Library
     */
    public Library() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ClientPanel = new javax.swing.JPanel();
        RegNo = new javax.swing.JTextField();
        FirstName = new javax.swing.JTextField();
        LastName = new javax.swing.JTextField();
        PhoneNumber = new javax.swing.JTextField();
        EmailAddress = new javax.swing.JTextField();
        Photo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CategoryComboBox = new javax.swing.JComboBox(Categories.values());
        jLabel7 = new javax.swing.JLabel();
        InsertClient = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ResetTable = new javax.swing.JButton();
        BookPanel = new javax.swing.JTabbedPane();
        BookPane = new javax.swing.JPanel();
        bookId = new javax.swing.JTextField();
        title = new javax.swing.JTextField();
        publishingHouse = new javax.swing.JTextField();
        dateOfPublication = new javax.swing.JTextField();
        author = new javax.swing.JTextField();
        pages = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        InsertBook = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        ReloadBook = new javax.swing.JButton();
        BookCategoryPane = new javax.swing.JPanel();
        categoryId = new javax.swing.JTextField();
        categoryName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        InsertBookCategory = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        ReloadBookCategory = new javax.swing.JButton();
        OperationsPanel = new javax.swing.JTabbedPane();
        CheckInPane = new javax.swing.JPanel();
        PickNameCheckIn = new javax.swing.JComboBox<>();
        PickBookCheckIn = new javax.swing.JComboBox<>();
        InsertCheckIn = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        ReloadCheckIn = new javax.swing.JButton();
        CheckOutPane = new javax.swing.JPanel();
        PickNameCheckOut = new javax.swing.JComboBox<>();
        PickBookCheckOut = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        InsertCheckOut = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        ReloadCheckOut = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Operations = new javax.swing.JMenu();
        OperationsMenu = new javax.swing.JMenuItem();
        Settings = new javax.swing.JMenu();
        ClientMenu = new javax.swing.JMenuItem();
        BookMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new java.awt.CardLayout());

        ClientPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("RegNo");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("First Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Last Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Phone Number");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Email Addrress");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Photo");

        CategoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Category");

        InsertClient.setText("Save");
        InsertClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertClientActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(102, 204, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "regNo", "firstName", "lastName", "phoneNumber", "emailAddress", "photo", "clientCategory"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        ResetTable.setText("Load");
        ResetTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetTableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientPanelLayout = new javax.swing.GroupLayout(ClientPanel);
        ClientPanel.setLayout(ClientPanelLayout);
        ClientPanelLayout.setHorizontalGroup(
            ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientPanelLayout.createSequentialGroup()
                        .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(75, 75, 75)
                        .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FirstName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(31, 31, 31)
                        .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(ClientPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ClientPanelLayout.createSequentialGroup()
                                .addComponent(ResetTable, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(InsertClient, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(ClientPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 44, Short.MAX_VALUE))))))
        );
        ClientPanelLayout.setVerticalGroup(
            ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(ClientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResetTable, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InsertClient))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jPanel1.add(ClientPanel, "card2");

        BookPanel.setBackground(new java.awt.Color(191, 88, 88));

        BookPane.setBackground(new java.awt.Color(204, 204, 255));

        bookId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookIdActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setText("Book Id");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel13.setText("Title");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setText("Publishing House");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setText("Date of Publishing");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setText("Author");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setText("Pages");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 51));
        jLabel18.setText("YYYY-MM-DD");

        InsertBook.setText("Save");
        InsertBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBookActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(51, 204, 0));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "bookID", "title", "Publishing House", "Date of Publication", "Author", "Pages"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        ReloadBook.setText("Load");
        ReloadBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookPaneLayout = new javax.swing.GroupLayout(BookPane);
        BookPane.setLayout(BookPaneLayout);
        BookPaneLayout.setHorizontalGroup(
            BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookPaneLayout.createSequentialGroup()
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(BookPaneLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 377, Short.MAX_VALUE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BookPaneLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(BookPaneLayout.createSequentialGroup()
                                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17))
                                .addGap(27, 27, 27)
                                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bookId, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(title)
                                    .addComponent(publishingHouse)
                                    .addComponent(dateOfPublication)
                                    .addComponent(author)
                                    .addComponent(pages))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InsertBook, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ReloadBook, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addGap(45, 45, 45))
        );
        BookPaneLayout.setVerticalGroup(
            BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookPaneLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(InsertBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publishingHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOfPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(ReloadBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        BookPanel.addTab("Book", BookPane);

        BookCategoryPane.setBackground(new java.awt.Color(204, 204, 255));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Category Id");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setText("Category Name");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "category Id", "Category Name"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        InsertBookCategory.setText("Save");
        InsertBookCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBookCategoryActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(102, 204, 0));

        ReloadBookCategory.setText("Load");
        ReloadBookCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadBookCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookCategoryPaneLayout = new javax.swing.GroupLayout(BookCategoryPane);
        BookCategoryPane.setLayout(BookCategoryPaneLayout);
        BookCategoryPaneLayout.setHorizontalGroup(
            BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookCategoryPaneLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookCategoryPaneLayout.createSequentialGroup()
                        .addComponent(ReloadBookCategory)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(BookCategoryPaneLayout.createSequentialGroup()
                        .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                        .addGap(63, 63, 63)
                        .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(categoryId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(categoryName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(386, 386, 386))
                    .addGroup(BookCategoryPaneLayout.createSequentialGroup()
                        .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(InsertBookCategory)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        BookCategoryPaneLayout.setVerticalGroup(
            BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookCategoryPaneLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(1, 1, 1)
                .addComponent(InsertBookCategory)
                .addGap(3, 3, 3)
                .addGroup(BookCategoryPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(8, 8, 8)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(ReloadBookCategory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        BookPanel.addTab("Book Category", BookCategoryPane);

        jPanel1.add(BookPanel, "card3");

        OperationsPanel.setBackground(new java.awt.Color(240, 111, 56));

        CheckInPane.setBackground(new java.awt.Color(204, 204, 255));

        PickNameCheckIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        PickNameCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PickNameCheckInActionPerformed(evt);
            }
        });

        PickBookCheckIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        PickBookCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PickBookCheckInActionPerformed(evt);
            }
        });

        InsertCheckIn.setText("Save");
        InsertCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertCheckInActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel20.setText("Client Name");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setText("Book Title");

        jLabel22.setForeground(new java.awt.Color(51, 204, 0));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Names", "Book Title", "Details", "Time"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        ReloadCheckIn.setText("Load");
        ReloadCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadCheckInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CheckInPaneLayout = new javax.swing.GroupLayout(CheckInPane);
        CheckInPane.setLayout(CheckInPaneLayout);
        CheckInPaneLayout.setHorizontalGroup(
            CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckInPaneLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CheckInPaneLayout.createSequentialGroup()
                        .addComponent(ReloadCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(InsertCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckInPaneLayout.createSequentialGroup()
                        .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CheckInPaneLayout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PickNameCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PickBookCheckIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(81, 81, 81))
        );
        CheckInPaneLayout.setVerticalGroup(
            CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckInPaneLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel21))
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PickNameCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PickBookCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addGroup(CheckInPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InsertCheckIn)
                    .addComponent(ReloadCheckIn))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        OperationsPanel.addTab("Check In", CheckInPane);

        CheckOutPane.setBackground(new java.awt.Color(204, 204, 255));

        PickNameCheckOut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        PickBookCheckOut.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setText("Client Name");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setText("BooK Name");

        jLabel25.setForeground(new java.awt.Color(102, 204, 0));

        InsertCheckOut.setText("Save");
        InsertCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertCheckOutActionPerformed(evt);
            }
        });

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Names", "Book Title", "Details", "Time"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        ReloadCheckOut.setText("Load");
        ReloadCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadCheckOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CheckOutPaneLayout = new javax.swing.GroupLayout(CheckOutPane);
        CheckOutPane.setLayout(CheckOutPaneLayout);
        CheckOutPaneLayout.setHorizontalGroup(
            CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckOutPaneLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CheckOutPaneLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(201, 201, 201)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(413, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckOutPaneLayout.createSequentialGroup()
                        .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PickNameCheckOut, 0, 231, Short.MAX_VALUE)
                            .addComponent(ReloadCheckOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InsertCheckOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckOutPaneLayout.createSequentialGroup()
                                .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel24)
                                    .addComponent(PickBookCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(166, 166, 166))))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        CheckOutPaneLayout.setVerticalGroup(
            CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckOutPaneLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PickNameCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PickBookCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(CheckOutPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReloadCheckOut, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InsertCheckOut, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        OperationsPanel.addTab("Check Out", CheckOutPane);

        jPanel1.add(OperationsPanel, "card4");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(18, 52, 86));

        Operations.setText("Operations");

        OperationsMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.CTRL_MASK));
        OperationsMenu.setText("Operations");
        OperationsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperationsMenuActionPerformed(evt);
            }
        });
        Operations.add(OperationsMenu);

        jMenuBar1.add(Operations);

        Settings.setText("Settings");

        ClientMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        ClientMenu.setText("Client");
        ClientMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientMenuActionPerformed(evt);
            }
        });
        Settings.add(ClientMenu);

        BookMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        BookMenu.setText("Book");
        BookMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookMenuActionPerformed(evt);
            }
        });
        Settings.add(BookMenu);

        jMenuBar1.add(Settings);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OperationsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperationsMenuActionPerformed
         BookPanel.setVisible(false);
         OperationsPanel.setVisible(true);
          ClientPanel.setVisible(false);
          
          PickNameCheckIn.removeAllItems();
           PickBookCheckIn.removeAllItems();
           PickNameCheckOut.removeAllItems();
           PickBookCheckOut.removeAllItems();
           try{
             Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
             Statement st = con.createStatement();
      String s = "select * from client";
             ResultSet rs = st.executeQuery(s);
        while(rs.next())
        {
            PickNameCheckIn.addItem(rs.getString(3)+" "+rs.getString(4));
            PickNameCheckOut.addItem(rs.getString(3)+" "+rs.getString(4));
        }
    }catch(Exception e){
         System.out.println("error: "+e);
    }
            try{
             Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
             Statement st = con.createStatement();
      String s = "select * from book";
             ResultSet rs = st.executeQuery(s);
        while(rs.next())
        {
            PickBookCheckIn.addItem(rs.getString(3));
            PickBookCheckOut.addItem(rs.getString(3));
        }
    }catch(Exception e){
         System.out.println("error: "+e);
    }
    }//GEN-LAST:event_OperationsMenuActionPerformed

    private void CategoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryComboBoxActionPerformed

    private void InsertClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertClientActionPerformed
         try {
            //get connection
            String Reg_No = RegNo.getText();
            String first_Name = FirstName.getText();
            String last_Name = LastName.getText();
            String phone_Number = PhoneNumber.getText();
            String email_Address = EmailAddress.getText();
            String photo = Photo.getText();
            String clientCategory = CategoryComboBox.getSelectedItem().toString();
            //((JTextField)myComboBox.getEditor().getEditorComponent()).getText()
            String ASSQL = "INSERT INTO client"+"(RegNo,firstName,lastName,phoneNumber,emailAddress,photo,clientCategory)"+" VALUES ('"+Reg_No+"','"+first_Name+"','"+last_Name+"','"+phone_Number+"','"+email_Address+"','"+photo+"','"+clientCategory+"')";        
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            st.executeUpdate(ASSQL);
              jLabel8.setText("Transaction Successfull");
              String tbData[] = {Reg_No,first_Name,last_Name,phone_Number,email_Address,photo,clientCategory};
		DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
		tblModel.addRow(tbData);
//                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
//		tblModel.setNumRows(0);
//                ResetTable.setVisible(true);
        } catch (Exception ex) {
         //   ex.printStackTrace();
            System.out.println("Transaction Failure: "+ex);
            jLabel8.setText("Transaction Failure: "+ex);
        }
        
    }//GEN-LAST:event_InsertClientActionPerformed

    private void ClientMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientMenuActionPerformed
          BookPanel.setVisible(false);
          OperationsPanel.setVisible(false);
          ClientPanel.setVisible(true);
          
    }//GEN-LAST:event_ClientMenuActionPerformed

    private void ResetTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetTableActionPerformed
        // TODO add your handling code here:
        
  try {
            //get connection
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select RegNo,firstName,lastName,phoneNumber,emailAddress,photo,clientCategory from client");
            
            while(rs.next()){
	    String regNo = rs.getString("regNo" ); 
	    String firstName = rs.getString("firstname");  
	    String lastName = rs.getString("lastName" );  
	    String phoneNumber = rs.getString("phoneNumber" );  
	    String emailAddress = rs.getString("emailAddress" );  
	    String photo = rs.getString("photo" );  
	    String clientCategory = rs.getString("clientCategory" ); 
		
		String tbData[] = {regNo,firstName,lastName,phoneNumber,emailAddress,photo,clientCategory};
		DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
		tblModel.addRow(tbData);
            }
        } catch (Exception ex) {
            System.out.println("Transaction Failure: "+ex);
        }
        ResetTable.setVisible(false);
    }//GEN-LAST:event_ResetTableActionPerformed

    private void InsertBookCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBookCategoryActionPerformed
          try {
            //get connection
            String category_Id = categoryId.getText();
            String category_Name = categoryName.getText();
            String ASSQL = "INSERT INTO book_category"+"(categoryId,categoryName)"+" VALUES ('"+category_Id+"','"+category_Name+"')";        
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            st.executeUpdate(ASSQL);
              jLabel11.setText("Transaction Successfull");
              String tbData[] = {category_Id,category_Name};
		DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
		tblModel.addRow(tbData);
        } catch (Exception ex) {
         //   ex.printStackTrace();
            System.out.println("Transaction Failure: "+ex);
            jLabel11.setText("Transaction Failure: "+ex);
        }
    }//GEN-LAST:event_InsertBookCategoryActionPerformed

    private void BookMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookMenuActionPerformed
         BookPanel.setVisible(true);
         OperationsPanel.setVisible(false);
          ClientPanel.setVisible(false);
    }//GEN-LAST:event_BookMenuActionPerformed

    private void ReloadBookCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadBookCategoryActionPerformed
         try {
            //get connection
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select categoryId,categoryName from book_category");
            
            while(rs.next()){
	    String categoryId = rs.getString("categoryId" ); 
	    String categoryName = rs.getString("categoryName");  
		
		String tbData[] = {categoryId,categoryName};
		DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
		tblModel.addRow(tbData);
            }
        } catch (Exception ex) {
            System.out.println("Transaction Failure: "+ex);
        }
        ReloadBookCategory.setVisible(false);
                           
    }//GEN-LAST:event_ReloadBookCategoryActionPerformed

    private void bookIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookIdActionPerformed

    private void InsertBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBookActionPerformed
         try {
            //get connection
            String BookId = bookId.getText();
            String Title = title.getText();
            String PublishingHouse = publishingHouse.getText();
            String DateOfPublication = dateOfPublication.getText();
            String Author = author.getText();
            String Pages = pages.getText();
            String ASSQL = "INSERT INTO book"+"(bookID,title,publishingHouse,dateOfPublication,author,pages)"+" VALUES ('"+BookId+"','"+Title+"','"+PublishingHouse+"','"+DateOfPublication+"','"+Author+"','"+Pages+"')";        
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            st.executeUpdate(ASSQL);
              jLabel19.setText("Transaction Successfull");
              String tbData[] = {BookId,Title,PublishingHouse,DateOfPublication,Author,Pages};
		DefaultTableModel tblModel = (DefaultTableModel)jTable3.getModel();
		tblModel.addRow(tbData);
        } catch (Exception ex) {
         //   ex.printStackTrace();
            System.out.println("Transaction Failure: "+ex);
            jLabel19.setText("Transaction Failure: "+ex);
        }
    }//GEN-LAST:event_InsertBookActionPerformed

    private void ReloadBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadBookActionPerformed
        try {
            //get connection
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select bookID,title,publishingHouse,dateOfPublication,author,pages from book");
            
            while(rs.next()){
	    String BookId = rs.getString("bookID" ); 
	    String Title = rs.getString("title");  
	    String PublishingHouse = rs.getString("publishingHouse" );  
	    String DateOfPublication = rs.getString("dateOfPublication" );  
	    String Author = rs.getString("author" );  
	    String Pages = rs.getString("pages" );  

		String tbData[] = {BookId,Title,PublishingHouse,DateOfPublication,Author,Pages};
		DefaultTableModel tblModel = (DefaultTableModel)jTable3.getModel();
		tblModel.addRow(tbData);
            }
        } catch (Exception ex) {
            System.out.println("Transaction Failure: "+ex);
        }
        ReloadBook.setVisible(false);
    }//GEN-LAST:event_ReloadBookActionPerformed

    private void PickNameCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PickNameCheckInActionPerformed
        
    }//GEN-LAST:event_PickNameCheckInActionPerformed

    private void PickBookCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PickBookCheckInActionPerformed
            
    }//GEN-LAST:event_PickBookCheckInActionPerformed

    private void InsertCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertCheckInActionPerformed
       try {
            //get connection
            String NameCheckIn = PickNameCheckIn.getSelectedItem().toString();
             String BookCheckIn = PickBookCheckIn.getSelectedItem().toString();
            //((JTextField)myComboBox.getEditor().getEditorComponent()).getText()
             DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            String CheckInDate = dateFormat.format(date);
            String ASSQL = "INSERT INTO operation"+"(names,bookID,operation_category,dateTime)"+" VALUES ('"+NameCheckIn+"','"+BookCheckIn+"','Check In','"+CheckInDate+"')";        
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            
            st.executeUpdate(ASSQL);
              jLabel22.setText("Transaction Successfull");
              String tbData[] = {NameCheckIn,BookCheckIn,"Check In",CheckInDate};
		DefaultTableModel tblModel = (DefaultTableModel)jTable4.getModel();
		tblModel.addRow(tbData);
        } catch (Exception ex) {
         //   ex.printStackTrace();
            System.out.println("Transaction Failure: "+ex);
            jLabel22.setText("Transaction Failure: "+ex);
        }
    }//GEN-LAST:event_InsertCheckInActionPerformed

    private void InsertCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertCheckOutActionPerformed
         try {
            //get connection
            String NameCheckOut = PickNameCheckOut.getSelectedItem().toString();
             String BookCheckOut = PickBookCheckOut.getSelectedItem().toString();
            //((JTextField)myComboBox.getEditor().getEditorComponent()).getText()
             DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            String CheckOutDate = dateFormat.format(date);
            String ASSQL = "INSERT INTO operation"+"(names,bookID,operation_category,dateTime)"+" VALUES ('"+NameCheckOut+"','"+BookCheckOut+"','Check Out','"+CheckOutDate+"')";        
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            st.executeUpdate(ASSQL);
              jLabel25.setText("Transaction Successfull");
                String tbData[] = {NameCheckOut,BookCheckOut,"Check Out",CheckOutDate};
		DefaultTableModel tblModel = (DefaultTableModel)jTable5.getModel();
		tblModel.addRow(tbData);
        } catch (Exception ex) {
         //   ex.printStackTrace();
            System.out.println("Transaction Failure: "+ex);
            jLabel25.setText("Transaction Failure: "+ex);
        }
    }//GEN-LAST:event_InsertCheckOutActionPerformed

    private void ReloadCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadCheckInActionPerformed
         try {
            //get connection
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select names,bookID,operation_category,dateTime from operation where operation_category = 'Check In' ");
            
            while(rs.next()){
	    String names = rs.getString("names" ); 
	    String bookID = rs.getString("bookID");  
	    String operation_category = rs.getString("operation_category" );  
	    String dateTime = rs.getString("dateTime" );  

		
		String tbData[] = {names,bookID,operation_category,dateTime};
		DefaultTableModel tblModel = (DefaultTableModel)jTable4.getModel();
		tblModel.addRow(tbData);
            }
        } catch (Exception ex) {
            System.out.println("Transaction Failure: "+ex);
        }
        ReloadCheckIn.setVisible(false);
    }//GEN-LAST:event_ReloadCheckInActionPerformed

    private void ReloadCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadCheckOutActionPerformed
           try {
            //get connection
            Connection con = DriverManager.getConnection("jdbc:postgresql://localhost:5432/zearn","postgres","root");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select names,bookID,operation_category,dateTime from operation where operation_category = 'Check Out' ");
            
            while(rs.next()){
	    String names = rs.getString("names" ); 
	    String bookID = rs.getString("bookID");  
	    String operation_category = rs.getString("operation_category" );  
	    String dateTime = rs.getString("dateTime" );  

		
		String tbData[] = {names,bookID,operation_category,dateTime};
		DefaultTableModel tblModel = (DefaultTableModel)jTable5.getModel();
		tblModel.addRow(tbData);
            }
        } catch (Exception ex) {
            System.out.println("Transaction Failure: "+ex);
        }
        ReloadCheckOut.setVisible(false);
    }//GEN-LAST:event_ReloadCheckOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Library.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Library().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BookCategoryPane;
    private javax.swing.JMenuItem BookMenu;
    private javax.swing.JPanel BookPane;
    private javax.swing.JTabbedPane BookPanel;
    private javax.swing.JComboBox<String> CategoryComboBox;
    private javax.swing.JPanel CheckInPane;
    private javax.swing.JPanel CheckOutPane;
    private javax.swing.JMenuItem ClientMenu;
    private javax.swing.JPanel ClientPanel;
    private javax.swing.JTextField EmailAddress;
    private javax.swing.JTextField FirstName;
    private javax.swing.JButton InsertBook;
    private javax.swing.JButton InsertBookCategory;
    private javax.swing.JButton InsertCheckIn;
    private javax.swing.JButton InsertCheckOut;
    private javax.swing.JButton InsertClient;
    private javax.swing.JTextField LastName;
    private javax.swing.JMenu Operations;
    private javax.swing.JMenuItem OperationsMenu;
    private javax.swing.JTabbedPane OperationsPanel;
    private javax.swing.JTextField PhoneNumber;
    private javax.swing.JTextField Photo;
    private javax.swing.JComboBox<String> PickBookCheckIn;
    private javax.swing.JComboBox<String> PickBookCheckOut;
    private javax.swing.JComboBox<String> PickNameCheckIn;
    private javax.swing.JComboBox<String> PickNameCheckOut;
    private javax.swing.JTextField RegNo;
    private javax.swing.JButton ReloadBook;
    private javax.swing.JButton ReloadBookCategory;
    private javax.swing.JButton ReloadCheckIn;
    private javax.swing.JButton ReloadCheckOut;
    private javax.swing.JButton ResetTable;
    private javax.swing.JMenu Settings;
    private javax.swing.JTextField author;
    private javax.swing.JTextField bookId;
    private javax.swing.JTextField categoryId;
    private javax.swing.JTextField categoryName;
    private javax.swing.JTextField dateOfPublication;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField pages;
    private javax.swing.JTextField publishingHouse;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}
